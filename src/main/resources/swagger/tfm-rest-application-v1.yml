openapi: 3.0.0
info:
  title: TFM REST API
  description: API to manage users.
  version: 1.0.0
  contact:
    name: API Support
    email: 0610809824@uma.es

paths:
  /createUser:
    post:
      summary: Create a new user
      description: This endpoint allows the creation of a new user in the system.
      operationId: createUser
      tags:
        - User management
      requestBody:
        description: User data to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                        example: juanperez
                      message:
                        type: string
                        example: User successfully created.
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
              examples:
                badRequest:
                  summary: Invalid request error
                  value:
                    error:
                      status: "400"
                      description: "Bad Request"
                      message: "There are fields that do not comply with the specified format."
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
              examples:
                badRequest:
                  summary: Not found
                  value:
                    error:
                      status: "404"
                      description: "Not found"
                      message: "Resource not found."
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
              examples:
                conflict:
                  summary: There are conflicts in some data
                  value:
                    error:
                      status: "409"
                      description: "Conflict"
                      message: "There are conflicts in some fields."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    error:
                      status: "500"
                      description: "Internal Server Error"
                      message: "Internal Server Error."

  /getUsersByGender:
    get:
      summary: Get users by gender
      description: This endpoint allows the retrieval of a list of users searching by gender.
      operationId: getUsersByGender
      tags:
        - User management
      parameters:
        - name: gender
          in: query
          required: true
          schema:
            type: string
            enum:
              - Male
              - Female
              - Another
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReturnUser'
        '204':
          description: No Content.
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
              examples:
                badRequest:
                  summary: Invalid request error
                  value:
                    error:
                      status: "400"
                      description: "Bad Request"
                      message: "There are fields that do not comply with the specified format."
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
              examples:
                badRequest:
                  summary: Not found
                  value:
                    error:
                      status: "404"
                      description: "Not found"
                      message: "Resource not found."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    error:
                      status: "500"
                      description: "Internal Server Error"
                      message: "Internal Server Error."

components:
  schemas:
    User:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name.
          example: Juan
        lastName:
          type: string
          description: User's last name.
          example: Pérez
        username:
          type: string
          description: Unique username.
          example: juanperez
        password:
          type: string
          description: User's password.
          example: mySecurePass123
        birthdate:
          type: string
          format: date
          description: User's birth date.
          example: '1990-05-25'
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        gender:
          type: string
          enum:
            - Male
            - Female
            - Another
          description: User's gender.
          example: Male
        email:
          type: string
          format: email
          description: User's email address.
          example: juan.perez@example.com
        phoneNumber:
          type: string
          description: User's phone number.
          example: '1234567890'
      required:
        - firstName
        - lastName
        - username
        - password
        - birthdate
        - gender
        - email
      additionalProperties: false

    ReturnUser:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name.
          example: Juan
        lastName:
          type: string
          description: User's last name.
          example: Pérez
        username:
          type: string
          description: Unique username.
          example: juanperez
        birthdate:
          type: string
          format: date
          description: User's birth date.
          example: '1990-05-25'
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        email:
          type: string
          format: email
          description: User's email address.
          example: juan.perez@example.com
        phoneNumber:
          type: string
          description: User's phone number.
          example: '1234567890'
      required:
        - firstName
        - lastName
        - username
        - birthdate
        - email
      additionalProperties: false

    ErrorDetails:
      type: object
      properties:
        error:
          type: object
          properties:
            status:
              type: string
              description: HTTP status code of the error.
              example: "400"
            description:
              type: string
              description: Description of the error type.
              example: "Bad Request"
            message:
              type: string
              description: Detailed error message.
              example: "Mandatory fields are missing or the data is invalid"
          required:
            - status
            - description
            - message
      required:
        - error